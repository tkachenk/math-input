(this["webpackJsonpmath-input-custom"]=this["webpackJsonpmath-input-custom"]||[]).push([[0],{13:function(a,l,e){a.exports=e(37)},36:function(a,l,e){},37:function(a,l,e){"use strict";e.r(l);var n=e(0),t=e.n(n),i=e(11),s=e.n(i),c=e(1),o=e(2),r=e(3),u=e(4),p=(e(18),e(8),e(9),e(19).getInterface(2)),d=(t.a.Component,e(5));console.log(d.MathField);t.a.Component;var y=e(12),k=e.n(y),m=(e(36),function(a){Object(u.a)(e,a);var l=Object(r.a)(e);function e(){var a;return Object(c.a)(this,e),(a=l.call(this)).keyboardRef=t.a.createRef(),a}return Object(o.a)(e,[{key:"componentDidMount",value:function(){k.a.makeMathField(this.keyboardRef.current,{strings:{"ru-RU":{"tooltip.undo":"\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c","tooltip.redo":"\u0412\u0435\u0440\u043d\u0443\u0442\u044c"}},onContentDidChange:this.updateOutput.bind(this),virtualKeyboardMode:"manual",customVirtualKeyboardLayers:{basic:"\n                    <div class=\"rows\">\n                        <ul>\n                            <li class='keycap'>7</li>\n                            <li class='keycap'>8</li>\n                            <li class='keycap'>9</li>\n                            <li class='keycap' data-insert='\\frac'>&divide;</li>\n                            <li class='keycap' data-insert='\\sin{\\placeholder{}}}'>sin</li>\n                        </ul>\n                        <ul>\n                            <li class='keycap '>4</li>\n                            <li class='keycap'>5</li>\n                            <li class='keycap'>6</li>\n                            <li class='keycap' data-insert='\\times'>&times;</li>\n                            <li class='keycap' data-insert='\\cos{\\placeholder{}}'>cos</li>\n                        </ul>\n                        <ul>\n                            <li class='keycap '>1</li>\n                            <li class='keycap'>2</li>\n                            <li class='keycap'>3</li>\n                            <li class='keycap'>-</li>\n                            <li class='keycap' data-insert='\\tg{\\placeholder{}}}'>tg</li>\n                        </ul>\n                        <ul>\n                            <li class='keycap' data-key='0'>0</li>\n                            <li class='keycap'>.</li>\n                            <li class='keycap' data-insert='\\pi'>\u03c0</li>\n                            <li class='keycap'>+</li>\n                            <li class='keycap' data-insert='\\sqrt{\\placeholder{}}'>sqrt</li>\n                        </ul>\n                        <ul>\n                            <li class='action font-glyph' data-command='\"moveToPreviousChar\"'> < </li>\n                            <li class='action font-glyph' data-command='\"moveToNextChar\"'> > </li>\n                            <li class='action font-glyph' data-command='\"deletePreviousChar\"'>&#x232b;</li>\n                        </ul>\n                    </div>\n                "},customVirtualKeyboards:{basic:{label:"Basic",layer:"basic"}},virtualKeyboards:"basic"})}},{key:"updateOutput",value:function(a){console.log(a.$text("latex"))}},{key:"render",value:function(){return t.a.createElement("div",{className:"input",ref:this.keyboardRef})}}]),e}(t.a.Component));s.a.render(t.a.createElement(m,null),document.getElementById("root"))}},[[13,1,2]]]);
//# sourceMappingURL=main.a1d98e25.chunk.js.map