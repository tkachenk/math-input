{"version":3,"sources":["AppMQ.js","AppReact.js","MathInput.js","index.js"],"names":["MQ","require","getInterface","React","Component","console","log","MathField","App","keyboardRef","createRef","MathLive","makeMathField","this","current","strings","onContentDidChange","updateOutput","bind","virtualKeyboardMode","customVirtualKeyboardLayers","basic","customVirtualKeyboards","label","layer","virtualKeyboards","payload","$text","className","ref","ReactDOM","render","MathInput","document","getElementById"],"mappings":"8PAMIA,G,gBADcC,EAAQ,IACPC,aAAa,I,GAEZC,IAAMC,U,MCL1BC,QAAQC,IAAIC,aACqBJ,IAAMC,U,qBC+ExBI,G,wDA3EX,aAAe,IAAD,8BACV,gBACKC,YAAcN,IAAMO,YAFf,E,gEAMVC,IAASC,cAAcC,KAAKJ,YAAYK,QAAS,CAC7CC,QAAS,CACL,QAAS,CACL,eAAgB,mDAChB,eAAgB,+CAGxBC,mBAAoBH,KAAKI,aAAaC,KAAKL,MAC3CM,oBAAqB,SACrBC,4BAA6B,CACzBC,MAAM,qhEAsCVC,uBAAwB,CACpBD,MAAO,CACHE,MAAO,QACPC,MAAO,UAGfC,iBAAkB,Y,mCAIbC,GACTrB,QAAQC,IAAIoB,EAAQC,MAAM,Y,+BAI1B,OACI,yBAAKC,UAAU,QAAQC,IAAKhB,KAAKJ,kB,GAvE3BN,IAAMC,YCDxB0B,IAASC,OAAO,kBAACC,EAAD,MAAeC,SAASC,eAAe,W","file":"static/js/main.a1d98e25.chunk.js","sourcesContent":["import React from 'react';\nimport \"mathquill/build/mathquill.css\"\nimport \"mathlive/dist/mathlive.css\";\nimport \"mathlive/dist/mathlive.core.css\";\n\nconst MathQuill = require(\"mathquill\");\nlet MQ = MathQuill.getInterface(2)\n\nclass AppMQ extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            mathField: null\n        }\n\n        this.mathFieldSpan = React.createRef()\n        this.latexSpan = React.createRef()\n\n    }\n\n    componentDidMount() {\n        const config = {\n            spaceBehavesLikeTab: true,\n            handlers: {\n                edit: () => {\n                    this.latexSpan.current.textContent = this.state.mathField.latex()\n                }\n            }\n        }\n        this.setState({\n            mathField: MQ.MathField(this.mathFieldSpan.current, config)\n        })\n\n    }\n\n    handlerButton(payload) {\n        this.state.mathField.cmd(payload);\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div ref={this.inputRef} />\n                <p>Type math here: <span ref={this.mathFieldSpan}></span></p>\n                <p>LaTeX of what you typed: <span ref={this.latexSpan}></span></p>\n\n                <button onClick={() => this.handlerButton('1')}>1</button>\n\n            </div>\n        )\n    }\n}\n\nexport default AppMQ;\n","import React from 'react'\nimport { EditableMathField, MathField } from 'react-mathquill'\n\nconsole.log(MathField)\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            latex: '\\\\frac{1}{\\\\sqrt{2}}\\\\cdot 2',\n        }\n        this.field = React.createRef()\n    }\n    handlerButton(payload) {\n        console.log(MathField.latex(payload))\n    }\n    render() {\n        return (\n            <div>\n                <EditableMathField\n                    ref={this.field}\n                    latex={this.state.latex}\n                    onChange={payload => {\n                        console.log(payload)\n                        this.setState({ latex: payload.latex() })\n                    }}\n                />\n                <button onClick={() => this.handlerButton('1')}>1</button>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport MathLive from \"mathlive\";\nimport \"mathlive/dist/mathlive.css\";\nimport \"mathlive/dist/mathlive.core.css\";\nimport \"./math-input.css\";\n\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.keyboardRef = React.createRef()\n    }\n\n    componentDidMount() {\n        MathLive.makeMathField(this.keyboardRef.current, {\n            strings: {\n                'ru-RU': {\n                    'tooltip.undo': 'Отменить',\n                    'tooltip.redo': 'Вернуть',\n                }\n            },\n            onContentDidChange: this.updateOutput.bind(this),\n            virtualKeyboardMode: \"manual\",\n            customVirtualKeyboardLayers: {\n                basic: `\n                    <div class=\"rows\">\n                        <ul>\n                            <li class='keycap'>7</li>\n                            <li class='keycap'>8</li>\n                            <li class='keycap'>9</li>\n                            <li class='keycap' data-insert='\\\\frac'>&divide;</li>\n                            <li class='keycap' data-insert='\\\\sin{\\\\placeholder{}}}'>sin</li>\n                        </ul>\n                        <ul>\n                            <li class='keycap '>4</li>\n                            <li class='keycap'>5</li>\n                            <li class='keycap'>6</li>\n                            <li class='keycap' data-insert='\\\\times'>&times;</li>\n                            <li class='keycap' data-insert='\\\\cos{\\\\placeholder{}}'>cos</li>\n                        </ul>\n                        <ul>\n                            <li class='keycap '>1</li>\n                            <li class='keycap'>2</li>\n                            <li class='keycap'>3</li>\n                            <li class='keycap'>-</li>\n                            <li class='keycap' data-insert='\\\\tg{\\\\placeholder{}}}'>tg</li>\n                        </ul>\n                        <ul>\n                            <li class='keycap' data-key='0'>0</li>\n                            <li class='keycap'>.</li>\n                            <li class='keycap' data-insert='\\\\pi'>π</li>\n                            <li class='keycap'>+</li>\n                            <li class='keycap' data-insert='\\\\sqrt{\\\\placeholder{}}'>sqrt</li>\n                        </ul>\n                        <ul>\n                            <li class='action font-glyph' data-command='\"moveToPreviousChar\"'> < </li>\n                            <li class='action font-glyph' data-command='\"moveToNextChar\"'> > </li>\n                            <li class='action font-glyph' data-command='\"deletePreviousChar\"'>&#x232b;</li>\n                        </ul>\n                    </div>\n                `\n            },\n            customVirtualKeyboards: {\n                basic: {\n                    label: \"Basic\",\n                    layer: \"basic\"\n                }\n            },\n            virtualKeyboards: \"basic\"\n        });\n    }\n\n    updateOutput(payload) {\n        console.log(payload.$text('latex'))\n    }\n\n    render() {\n        return (\n            <div className=\"input\" ref={this.keyboardRef}/>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppMQ from './AppMQ';\nimport AppReact from './AppReact';\nimport MathInput from './MathInput';\n\nReactDOM.render(<MathInput />, document.getElementById('root'));\n"],"sourceRoot":""}